/* BUILD
protoc --proto_path=src/proto --proto_path=C:\Users\samda\go\src --go_out=plugins=grpc:src/proto .\src\proto\services\game_server\game_server.proto
*/

syntax = "proto3";

import "github.com/sambdavidson/community-chess/src/proto/messages/game.proto";
import "github.com/sambdavidson/community-chess/src/proto/messages/games/chess.proto";
import "github.com/sambdavidson/community-chess/src/proto/messages/vote.proto";

package game_server;

service GameServer {
    rpc GetGame (GetGameRequest) returns (GetGameResponse);
    rpc GetGameMetadata (GetGameMetadataRequest) returns (GetGameMetadataResponse);
    rpc GetGameState (GetGameStateRequest) returns (GetGameStateResponse);
    rpc GetGameHistory (GetGameHistoryRequest) returns (GetGameHistoryResponse);
    rpc Join (JoinRequest) returns (JoinResponse);
    rpc Leave (LeaveRequest) returns (LeaveResponse);
    rpc PostVote (PostVoteRequest) returns (PostVoteResponse);
}

message GetGameRequest {
    string game_id = 1;
    bool detailed = 2;
}

message GetGameResponse {
    messages.Game game = 1;
}

message GetGameMetadataRequest {
    string game_id = 1;
}

message GetGameMetadataResponse {
    messages.Game.Metadata metadata = 1;
}

message GetGameStateRequest {
    string game_id = 1;
}

message GetGameStateResponse {
    oneof state {
        games.ChessState chess_state = 1;
    }
}

message GetGameHistoryRequest {
    string game_id = 1;
}

message GetGameHistoryResponse {
    oneof history {
        games.ChessHistory chess_history = 1;
    }
}

message JoinRequest {
    string game_id = 1;
    string player_id = 2;
    oneof game_specific_data {
        ChessData chess_data = 3;
    }
    message ChessData {
        bool white_team = 1;
    }
}

message JoinResponse {}

message LeaveRequest {
    string game_id = 1;
    string player_id = 2;
}

message LeaveResponse {}

message PostVoteRequest {
    string game_id = 1;
    messages.Vote vote = 2;
}

message PostVoteResponse {}